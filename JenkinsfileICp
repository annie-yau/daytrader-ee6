pipeline {
    agent any
    parameters {
        string(name: 'ICP_MASTER_CFC', defaultValue: 'mycluster.icp:8500')
        string(name: 'ICP_MASTER_USER', defaultValue: 'technet')
        string(name: 'ICP_MASTER_PW', defaultValue: '1234qweR')
        string(name: 'ICP_MASTER_8001', defaultValue: 'https://161.202.60.33:8001')
}
    
    triggers {
        GenericTrigger (
            token:'daytrader-demo-dev',
            printContributedVariables: false,
            printPostContent: false,
            silentResponse: false
        )
     }
     
    stages {
        stage('Continuous Integration') {
            steps {
                sh '''
                   cd dt-ejb
                   mvn clean install
                   cd ../Rest
                   mvn clean install
                   cd ../web
                   mvn clean install
                   cd ../daytrader-ee6
                   mvn clean verify -Pci-docker
                   cd ..
                   '''
             }             
        }
        stage('Continuous Delivery') {
            steps {
                sh '''                         
                    echo "docker login to mycluster.icp"
                    docker login -u $ICP_MASTER_USER -p $ICP_MASTER_PW $ICP_MASTER_CFC
                    echo "docker tag"
                    docker tag dhvines/daytrader-ee6:1.0-snapshot $ICP_MASTER_CFC/demo-env-dev/daytrader-ee6:latest
                    echo "docker push"
                    docker push $ICP_MASTER_CFC/demo-env-dev/daytrader-ee6:latest
                    echo "kubectl login"   
                    idToken=$(curl -k -H "Content-Type: application/x-www-form-urlencoded;charset=UTF-8" -d "grant_type=password&username=technet&password=1234qweR&scope=openid" https://mycluster.icp:8443/idprovider/v1/auth/identitytoken --insecure|/icpAuth/jq -r '.id_token')
                    kubectl config set-cluster mycluster --server=$ICP_MASTER_8001 --insecure-skip-tls-verify=true
                    kubectl config set-context mycluster-context --cluster=mycluster
                    kubectl config set-credentials $ICP_MASTER_USER --token=$idToken
                    kubectl config set-context mycluster-context --user=$ICP_MASTER_USER --namespace=demo-env-dev
                    kubectl config use-context mycluster-context
                    #!/bin/bash
                    echo "checking if wlp-daytrader-jenkins already exists"
                    if kubectl describe service wlp-daytrader-jenkins -n demo-env-dev; then
                        echo "Service already exists, delete first"
                        kubectl delete service wlp-daytrader-jenkins -n demo-env-dev
                    fi
                    if kubectl describe deployment wlp-daytrader-jenkins -n demo-env-dev; then
                        echo "Application already exists, delete first"
                        kubectl delete deployment wlp-daytrader-jenkins -n demo-env-dev
                    fi
                    echo "Create application"
                    kubectl create -f app.json
                    echo "Create service"
                    set +e
                    kubectl create -f service.json                                      
                    echo "finished"
                '''
            }
        }
    }
}
